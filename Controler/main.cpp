/*============================================================================================================================================================================
Information
==============================================================================================================================================================================
SDK: 		v2.1.1
Toolchain:	14.2Rel1
Ninja:		v1.12.1
CMake:		v4.0.0-rc4
============================================================================================================================================================================*/



/*============================================================================================================================================================================
Includes    Libaries
============================================================================================================================================================================*/
#include    <stdio.h>
#include    "pico/stdlib.h"
#include    "hardware/pio.h"
#include    "pico/cyw43_arch.h"
#include    "hardware/uart.h"



/*============================================================================================================================================================================
Define      Variable    Value   Description
============================================================================================================================================================================*/
#define     RELAY_PIN   16      // Example GPIO pin for relay control. Replace as needed.


/*============================================================================================================================================================================
Sub-Functions
============================================================================================================================================================================*/

// Hàm này điều khiển động cơ e1 với tham số "power" (công suất) và "direct" (hướng quay)

private void single_1_e1(float power, bool direct)
{

    if (direct == 1) // Nếu hướng quay là tiến
    {
        // Thiết lập tín hiệu để quay tiến
        in1_e1 = power_to_time_working(power); // in1 nhận giá trị tương ứng với công suất
        in2_e1 = 0; // in2 đặt về 0 để đảm bảo chỉ quay 1 chiều
    }
    else // Nếu hướng quay là lùi
    {
        // Thiết lập tín hiệu để quay lùi
        in1_e1 = 0;
        in2_e1 = power_to_time_working(power); // in2 nhận giá trị tương ứng với công suất
    }
}

    private void single_1_e2( float power, bool direct)
    {
        if (direct == 1)
        {
            // Forward
            in1_e2 = power_to_time_working(power);
            in2_e2 = 0;
        }
        else
        {
            // Backward
            in1_e2 = 0;
            in2_e2 = power_to_time_working(power);
        }
    }
    {
        return 0;
    }
    private void single_1_e3( float power, bool direct)
    {
        if (direct == 1)
        {
            // Forward
            in1_e3 = power_to_time_working(power);
            in2_e3 = 0;
        }
        else
        {
            // Backward
            in1_e3 = 0;
            in2_e3 = power_to_time_working(power);
        }
    }
    {
        return 0;
    }

    private void single_1_e4( float power, bool direct)
    {
        if (direct == 1)
        {
            // Forward
            in1_e4 = power_to_time_working(power);
            in2_e4 = 0;
        }
        else
        {
            // Backward
            in1_e4 = 0;
            in2_e4 = power_to_time_working(power);
        }
    }
    {
        return 0;
    }

/*============================================================================================================================================================================
Main Function
============================================================================================================================================================================*/
int main()
{
    while (true)
    {
        /* code */
    }
    
}