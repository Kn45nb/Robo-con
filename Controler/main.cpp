/*============================================================================================================================================================================
Information
==============================================================================================================================================================================
SDK: 		v2.1.1
Toolchain:	14.2Rel1
Ninja:		v1.12.1
CMake:		v4.0.0-rc4
============================================================================================================================================================================*/



/*============================================================================================================================================================================
Includes    Libaries
============================================================================================================================================================================*/
#include    <stdio.h>
#include    "pico/stdlib.h"
#include    "hardware/pio.h"
#include    "pico/cyw43_arch.h"
#include    "hardware/uart.h"



/*============================================================================================================================================================================
Define      Variable        Value       Description
============================================================================================================================================================================*/



/*============================================================================================================================================================================
Type        Variable        Value       Description
============================================================================================================================================================================*/
// Giả dữ liệu truyền vào
float       power           =50;        // Công xuất động cơ (%) | 0-100
bool        direct          =1;         // Hướng đi: 1 - Tiến | 0 - Lùi
bool        isRight         =1;         // Hướng quay: 1 - Phải | 0 - Trái
uint8_t     STU             =0;         // Trạng thái đặc biệt: 0 - Nomal | 1 - Boot | 2 - Parking | 3 - unParking.

// Dữ liệu truyền ra Real-time
bool        in1_e1          =0;        // Động cơ 1 cổng 1
bool        in2_e1          =0;        // Động cơ 1 cổng 2
bool        in1_e2          =0;        // Động cơ 2 cổng 1
bool        in2_e2          =0;        // Động cơ 2 cổng 2
bool        in1_e3          =0;        // Động cơ 3 cổng 1
bool        in2_e3          =0;        // Động cơ 3 cổng 2
bool        in1_e4          =0;        // Động cơ 4 cổng 1
bool        in2_e4          =0;        // Động cơ 4 cổng 2

// Giả dữ liệu truyền ra



/*============================================================================================================================================================================
Main Function
============================================================================================================================================================================*/
int main()
{
    
}



/*============================================================================================================================================================================
Sub-Functions
============================================================================================================================================================================*/
// Check COM -----------------------------------------------------------------------------------------------------------------------------------------------------------------
void check_COM()
{
    if (uart_is_readable(uart0))
    {
        uint8_t data = uart_getc(uart0);
        switch (data)
        {
            case 0x01:
                STU = 1;
                break;
            case 0x02:
                STU = 2;
                break;
            case 0x03:
                STU = 3;
                break;
            default:
                STU = 0;
                break;
        }
    }
}


// Chuyển đổi dữ liệu mức công xuất ra xung | 0-100 -> 0-1000 ----------------------------------------------------------------------------------------------------------------
void power_to_time_working(double power, bool direct)
{
    
}



// Đơn động cơ ---------------------------------------------------------------------------------------------------------------------------------------------------------------
// Bên phải
void single_1_e1(double power, bool direct)
{
    if (direct)
    {
        in1_e1 = power_to_time_working(power);
        in2_e1 = 0;
    }
    else
    {
        in1_e1 = 0;
        in2_e1 = power_to_time_working(power);
    }
}

void single_1_e2(double power, bool direct)
{
    if (direct)
    {
        in1_e2 = power_to_time_working(power);
        in2_e2 = 0;
    }
    else
    {
        in1_e2 = 0;
        in2_e2 = power_to_time_working(power);
    }
}

void single_1_e3(double power, bool direct)
{
    if (direct)
    {
        
        in1_e3 = 0;
        in2_e3 = power_to_time_working(power);
    }
    else
    {
        in1_e3 = power_to_time_working(power);
        in2_e3 = 0;
    }
}

void single_1_e4(double power, bool direct)
{
    if (direct)
    {
        in1_e4 = 0;
        in2_e4 = power_to_time_working(power);
    }
    else
    {
        in1_e4 = power_to_time_working(power);
        in2_e4 = 0;
    }
}


// Động bộ dọc 2 động cơ -----------------------------------------------------------------------------------------------------------------------------------------------------
void sync_2_Vertical_R(double power, bool direct)
{
    single_1_e1(power, direct);
    single_1_e2(power, direct);
}

void sync_2_Vertical_L(double power, bool direct)
{
    single_1_e3(power, direct);
    single_1_e4(power, direct);
}

// Động bộ ngang 2 động cơ ---------------------------------------------------------------------------------------------------------------------------------------------------
void sync_2_Horizontal_R()
{
}

void sync_2_Horizontal_L()
{
}

// Nghịch đồng bộ 2 - 2 động cơ (Xoay) ---------------------------------------------------------------------------------------------------------------------------------------
void circular(double power, bool isRight)
{
    if (isRight)
    {
        sync_2_Vertical_R(power, 1);
        sync_2_Vertical_L(power, 0);
    }
    else
    {
        sync_2_Vertical_R(power, 0);
        sync_2_Vertical_L(power, 1);
    }
}


// Giao thức đặc biệt không qua các hàm xung --------------------------------------------------------------------------------------------------------------------------------
void boot()
{
}
void parking()
{
}
void unParking()
{
}
void pause()
{
}




